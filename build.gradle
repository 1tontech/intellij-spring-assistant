import com.vladsch.flexmark.ast.Document
import com.vladsch.flexmark.html.HtmlRenderer
import com.vladsch.flexmark.parser.Parser

buildscript {
    apply plugin: 'groovy'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
        classpath 'org.codehaus.groovy:groovy-all:2.4.13'
        classpath group: 'com.vladsch.flexmark', name: 'flexmark', version: '0.28.12'
    }
}

plugins {
    id "java"
    id "org.jetbrains.intellij" version "1.2.0"
    id "io.freefair.lombok" version "6.2.0"
}

group "dev.flikas"
version '0.2.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'com.miguelfonseca.completely:completely-core:0.9.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.12.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

String readmeXmlAsHtml() {
    Parser parser = Parser.builder().build()
    HtmlRenderer renderer = HtmlRenderer.builder().build()
    String readmeContent = new File(rootProject.uri('README.md')).text
    // since these images needs to shown from within intellij, lest put absolute urls so that the images & changelog will be visible
    readmeContent = readmeContent.replaceAll("help\\.gif", "https://raw.githubusercontent.com/flikas/idea-spring-boot-assistant/" + version + "/help.gif")
    readmeContent = readmeContent.replaceAll("CHANGELOG.md", "https://github.com/flikas/idea-spring-boot-assistant/blob/" + version + "/CHANGELOG.md")
    Document readmeDocument = parser.parse(readmeContent)
    renderer.withOptions()
    renderer.render(readmeDocument)
}

String changeLogAsHtml() {
    Parser parser = Parser.builder().build()
    HtmlRenderer renderer = HtmlRenderer.builder().build()
    Document changeLogDocument = parser.parse(new File(rootProject.uri('CHANGELOG.md')).text)
    renderer.render(changeLogDocument)
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    type = 'IC'
    version = '2019.3'
    plugins = ['properties', 'yaml', 'maven', 'gradle', 'com.intellij.java']
    downloadSources = true
}

patchPluginXml {
    sinceBuild = '193.5233.102'
    untilBuild = '212.5284.*'
    pluginDescription = readmeXmlAsHtml()
    changeNotes = changeLogAsHtml()
}

signPlugin {
    certificateChainFile = new File(rootProject.uri("chain.crt"))
    privateKeyFile = new File(rootProject.uri("private.pem"))
    password = System.getenv("PRIVATE_KEY_PASSWORD")
}

publishPlugin {
    token = System.getenv("PUBLISH_TOKEN")
    channels = ['eap', 'nightly', 'default']
}