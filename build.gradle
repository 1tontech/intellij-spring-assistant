import com.vladsch.flexmark.ast.Document
import com.vladsch.flexmark.html.HtmlRenderer
import com.vladsch.flexmark.parser.Parser

buildscript {
    apply plugin: 'groovy'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
        classpath 'org.codehaus.groovy:groovy-all:2.4.13'
        classpath group: 'com.vladsch.flexmark', name: 'flexmark', version: '0.28.12'
    }
}

plugins {
    id "java"
    id "org.jetbrains.intellij" version "1.2.0"
//    id "io.freefair.lombok" version "6.1.0"
}

group "in.flikas"
version '0.12.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    compile 'org.apache.commons:commons-collections4:4.4'
    compile 'com.miguelfonseca.completely:completely-core:0.9.0'

    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.12.0'
}

String readmeXmlAsHtml() {
    Parser parser = Parser.builder().build()
    HtmlRenderer renderer = HtmlRenderer.builder().build()
    String readmeContent = new File(rootProject.uri('README.md')).text
    // since these images needs to shown from within intellij, lest put absolute urls so that the images & changelog will be visible
    readmeContent = readmeContent.replaceAll("help\\.gif", "https://raw.githubusercontent.com/1tontech/intellij-spring-assistant/" + version + "/help.gif")
    readmeContent = readmeContent.replaceAll("CHANGELOG.md", "https://github.com/1tontech/intellij-spring-assistant/blob/" + version + "/CHANGELOG.md")
    Document readmeDocument = parser.parse(readmeContent)
    renderer.render(readmeDocument)
}

String changeLogAsHtml() {
    Parser parser = Parser.builder().build()
    HtmlRenderer renderer = HtmlRenderer.builder().build()
    Document changeLogDocument = parser.parse(new File(rootProject.uri('CHANGELOG.md')).text)
    renderer.render(changeLogDocument)
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version = 'IC-2021.2.2'
    plugins = ['properties', 'yaml', 'maven', 'gradle', 'com.intellij.java']
    downloadSources = true
//    publishPlugin {
//        username System.getProperty('ij_plugin_portal_login')
//        password System.getProperty('ij_plugin_portal_password')
//        channels 'eap', 'nightly', 'default'
//    }
    updateSinceUntilBuild = false
}

patchPluginXml {
    pluginDescription = readmeXmlAsHtml()
    changeNotes = changeLogAsHtml()
}