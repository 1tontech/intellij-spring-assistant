<!-- `url` specifies the URL of the plugin homepage (can be opened from "Plugins" settings dialog) -->
<idea-plugin url="https://github.com/flikas/intellij-spring-assistant">

  <!-- Plugin name. It should be short and descriptive and in Title Case.
       Displayed in the "Plugins" settings dialog and the plugin repository Web interface. -->
  <name>Spring Boot Assistant</name>

  <!-- Unique identifier of the plugin. It should be FQN.
       It cannot be changed between the plugin versions.
       If not specified, <name> will be used (not recommended). -->
  <id>dev.flikas.idea.spring.boot.assistant.plugin</id>

  <!-- Description of the plugin.
       Should be short and to the point.
       Start the description with a verb in a present simple form such as
       "integrates", "synchronizes", "adds support for" or "lets you view".
       Don't use marketing adjectives like "simple", "lightweight", or "professional".
       Don't repeat the name of the plugin.
       For plugins that add language/platform/framework support, the description MUST specify
       the version of the corresponding language/platform/framework.
       Don't mention the IDE compatibility. E.g., don't say "Adds support to IntelliJ IDEA for..."
       Displayed in the "Plugins" settings dialog and the plugin repository Web interface.
       Simple HTML elements can be included between <![CDATA[  ]]> tags.  -->
  <!-- Will be auto populated from README.md by plugin
  <description/>
  -->

  <!-- Description of changes in the latest version of the plugin.
       Displayed in the "Plugins" settings dialog and the plugin repository Web interface.
       Simple HTML elements can be included between <![CDATA[  ]]> tags.  -->
  <!-- Will be auto populated from CHANGELOG.md by plugin
  <change-notes/>
  -->

  <!-- Plugin version
       Recommended format is BRANCH.BUILD.FIX (MAJOR.MINOR.FIX)
       Displayed in the "Plugins" settings dialog and the plugin repository Web interface.  -->
  <!-- Will be auto populated by plugin
  <version>1.0.0</version>
  -->

  <!-- The vendor of the plugin.
       The optional "url" attribute specifies the URL of the vendor homepage.
       The optional "email" attribute specifies the e-mail address of the vendor.
       Displayed in the "Plugins" settings dialog and the plugin repository Web interface. -->
  <vendor email="flikas@outlook.com">PENG FEI</vendor>

  <!-- Mandatory dependencies on plugins or modules.
       The FQN module names in <depends> elements are used to determine IDE compatibility for the plugin.
       Include at least the module shown below to indicate compatibility with IntelliJ Platform-based products.
       Also, include dependencies on other plugins as needed.
       See "Compatibility with Multiple Products" and "Plugin Dependencies" for more information.  -->
  <depends>com.intellij.modules.platform</depends>
  <depends>com.intellij.modules.java</depends>
  <depends>com.intellij.modules.lang</depends>
  <depends>org.jetbrains.plugins.yaml</depends>
  <depends>com.intellij.properties</depends>

  <!-- Optional dependency on another plugin.
       If the plugin with the "com.MySecondPlugin" ID is installed, the contents of mysecondplugin.xml
       (the format of this file conforms to the format of plugin.xml) will be loaded. -->
  <depends config-file="maven.xml" optional="true">org.jetbrains.idea.maven</depends>
  <depends config-file="gradle.xml" optional="true">com.intellij.gradle</depends>

  <!-- Minimum and maximum build of IDE compatible with the plugin -->
  <!-- Will be auto populated from CHANGELOG.md by plugin
  <idea-version since-build="212" until-build="212.*"/>
  -->

  <!-- Extensions which the plugin adds to extension points
       defined by the IntelliJ Platform or by other plugins.
       The "defaultExtensionNs" attribute must be set to the
       ID of the plugin defining the extension point, or to
       "com.intellij" if the extension point is defined by the
       IntelliJ Platform. The name of the tag within the <extensions>
       tag matches the name of the extension point, and the
       "implementation" class specifies the name of the class
       added to the extension point. -->
  <extensions defaultExtensionNs="com.intellij">
    <postStartupActivity
        implementation="in.oneton.idea.spring.assistant.plugin.suggestion.component.BootstrapImpl"/>
    <completion.contributor language="yaml"
                            implementationClass="in.oneton.idea.spring.assistant.plugin.suggestion.completion.YamlCompletionContributor"/>

    <!--<completion.contributor language="Properties"-->
    <!--implementationClass="in.oneton.idea.spring.assistant.plugin.suggestion.completion.PropertiesCompletionContributor"/>-->

    <documentationProvider
        implementation="in.oneton.idea.spring.assistant.plugin.suggestion.completion.YamlDocumentationProvider"/>

    <!--<documentationProvider-->
    <!--implementation="in.oneton.idea.spring.assistant.plugin.suggestion.completion.PropertiesDocumentationProvider"/>-->

    <!--<annotator-->
    <!--implementationClass="DuplicateKeyAnnotator"-->
    <!--language="yaml"/>-->
    <!--<annotator-->
    <!--implementationClass="DataTypeCheckerAnnotator"-->
    <!--language="yaml"/>-->
    <!--<annotator-->
    <!--implementationClass="PropertyNotInModelAnnotator"-->
    <!--language="yaml"/>-->

    <projectService
        serviceInterface="in.oneton.idea.spring.assistant.plugin.suggestion.service.SuggestionService"
        serviceImplementation="in.oneton.idea.spring.assistant.plugin.suggestion.service.SuggestionServiceImpl"/>

  </extensions>

</idea-plugin>
